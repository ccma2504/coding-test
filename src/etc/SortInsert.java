package etc;

/*
O(N^2)
https://velog.io/@minji0801/%EB%B2%84%EB%B8%94%EC%A0%95%EB%A0%AC-vs-%EC%84%A0%ED%83%9D%EC%A0%95%EB%A0%AC-vs-%EC%82%BD%EC%9E%85%EC%A0%95%EB%A0%AC-%EC%B0%A8%EC%9D%B4-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%95%8C%EA%B3%A0%EA%B0%80%EC%9E%90
- 버블 정렬
인접한 원소끼리 비교하여 교환하는 방식
셋 중에 제일 느리지만 단순함
- 선택 정렬
최솟값을 찾아서 맨 앞으로 이동하는 방식
버블 정렬보다 좋음
- 삽입 정렬
앞에서부터 차례대로 이미 정렬된 부분과 비교하여 교환하는 방식
셋 중에 제일 빠르지만 배열이 길어질수록 효율성이 떨어짐


삽입 정렬
두번째 부터 시작하여,
앞으로 가면서 작은것이 있다면 스왑
세번쨰 부터 시작하여 앞으로 가면서 작은것이 있다면 스왑


선택 정렬
가장 작은 값을 찾아서, 첫번째 값과 스왑
그다음 작은 값 가져와서, 두번째 값과 스왑
..

버블 정렬
맨 앞자리 부터 하나씩 다음 값과 비교하여 스왑
계속 맨 앞자리 부터 다음 값과 비교하여 스왑


 */
public class SortInsert {
}
